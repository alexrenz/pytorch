{"query_sha=fea7527b55661c30013cf0ce69b664e4ffe28199ce44b9af994c72288bde5fa0 name=pytorch number=71759 owner=pytorch": {"data": {"repository": {"pullRequest": {"closed": true, "isCrossRepository": true, "author": {"login": "coolteemf"}, "title": "Optimize grid sample 3d", "body": "Fixes #71415\r\nI have implemented the changes that replicate what @to-mi did in this [PR](https://github.com/pytorch/pytorch/pull/65986#issue-1012959443) for the 3D case :\r\n\r\n> Fixes #64977\r\n> \r\n> Avoids creating a tensor for and calculating `input` gradient if it's not needed in the backward pass of `grid_sample` (2d case, native CPU & CUDA kernels). Especially the tensor creation seemed time consuming (see #64977).\r\n> \r\n> Brief description of the changes:\r\n> \r\n>     * I have tried to go with rather minimal changes. It would probably be possible to make a more elegant version with a bit larger refactoring (or possibly with better understanding of PyTorch internals and C++ functionalities).\r\n> \r\n>     * Changed the `native_functions.yaml` and `derivatives.yaml` so that the gradient input mask is passed to the functions.\r\n> \r\n>     * Changed the CPU kernels:\r\n>       (1) added `bool input_requires_grad` template parameter to the `backward` function,\r\n>       (2) added if branches based on it to remove `input` gradient computations if it's not requested,\r\n>       (3) feed in `TensorAccessor<scalar_t, 3>* gInp_slice_ptr` instead of `TensorAccessor<scalar_t, 3>& gInp_slice` so that I can pass a `nullptr` in case gradient for `input` is not requested. (A bit inelegant perhaps, but allows to keep one signature for `backward` function and not require breaking it to smaller pieces. Perhaps there's a more elegant way to achieve this?)\r\n> \r\n>     * Changed CUDA kernel:\r\n>       (1) added ~`bool input_requires_grad` template parameter~ `const bool input_requires_grad` argument to the `backward` function,\r\n>       (2) added if branches based on it to remove `input` gradient computations if it's not requested,\r\n>       (3) feed in `TensorInfo<scalar_t, index_t>()` instead of `getTensorInfo<scalar_t, index_t>(grad_input)` in case gradient for `input` is not requested.\r\n> \r\n>     * Modified tests in `test/test_nn.py` so that they run also cases with no `input` gradient needed.\r\n> \r\n>     * Have not touched the CPU fallback kernel.\r\n\r\nNote: the changes number (3) are N/A in this case.\r\n\r\n", "headRefName": "optimize_grid_sample_3d", "headRepository": {"nameWithOwner": "coolteemf/pytorch"}, "baseRefName": "master", "baseRepository": {"nameWithOwner": "pytorch/pytorch", "isPrivate": false, "defaultBranchRef": {"name": "master"}}, "mergeCommit": null, "commits": {"nodes": [{"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "e0b0d1e695aeddceaf265da602c4704592053e9e", "checkSuites": {"nodes": []}}}, {"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "563ec73747ad53b63b36736c47c4342f962c2a09", "checkSuites": {"nodes": []}}}, {"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "51abe41a132d9dd5b1c0551bdca902aacc028ff8", "checkSuites": {"nodes": []}}}, {"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "be9898205992034a00e8ace8a55c2ecdcee2c2f8", "checkSuites": {"nodes": []}}}, {"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "2929c60b64384c2deae0f7dea8bab94ad4bc9ec8", "checkSuites": {"nodes": []}}}, {"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "9241b737e7e2b257905cc74ad9c50b737d7f9d0a", "checkSuites": {"nodes": []}}}, {"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "64d6b795d0636928a8aa2fd3da01302fb5f5f7af", "checkSuites": {"nodes": []}}}, {"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "4503577e53760a0006f1e80ca6bfe04d2be90470", "checkSuites": {"nodes": []}}}, {"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "b16f4b11ffbbbf2ca2098f9702af4ef6b6fc5e1f", "checkSuites": {"nodes": [{"app": {"databaseId": 12274}, "conclusion": "SUCCESS"}]}}}, {"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "7ffc23368a604afdc92d2818747f730ce31a2bb5", "checkSuites": {"nodes": []}}}, {"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "b85292604b9ad6c31706b76b5a5498c4f6d94309", "checkSuites": {"nodes": [{"app": {"databaseId": 12274}, "conclusion": "SUCCESS"}]}}}, {"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "9d81d7bae8ad91aaa24b3ceab83e3138894dbc69", "checkSuites": {"nodes": [{"app": {"databaseId": 12274}, "conclusion": "SUCCESS"}]}}}, {"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "e79f6a2202512b294c55bf4bfb2e0524fafd4c48", "checkSuites": {"nodes": [{"app": {"databaseId": 12274}, "conclusion": "SUCCESS"}]}}}, {"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "f683e8aec7aea76097a264eec01511e704c31154", "checkSuites": {"nodes": [{"app": {"databaseId": 12274}, "conclusion": "SUCCESS"}]}}}, {"commit": {"author": {"user": {"login": "coolteemf"}, "email": "67541941+coolteemf@users.noreply.github.com", "name": "Fran\u00e7ois Lecomte"}, "oid": "b932e9e286c22aaf352375186df851ef060b295a", "checkSuites": {"nodes": [{"app": {"databaseId": 12274}, "conclusion": "SUCCESS"}]}}}, {"commit": {"author": {"user": null, "email": "ghp_XXXXXX", "name": "coolteemf"}, "oid": "346e0c547953d98eb84d23c1391a95badb9c4a22", "checkSuites": {"nodes": [{"app": {"databaseId": 12274}, "conclusion": "SUCCESS"}]}}}], "totalCount": 16}, "changedFiles": 9, "files": {"nodes": [{"path": "aten/src/ATen/native/GridSampler.cpp"}, {"path": "aten/src/ATen/native/cpu/GridSamplerKernel.cpp"}, {"path": "aten/src/ATen/native/cuda/GridSampler.cpp"}, {"path": "aten/src/ATen/native/cuda/GridSampler.cu"}, {"path": "aten/src/ATen/native/cuda/GridSampler.h"}, {"path": "aten/src/ATen/native/native_functions.yaml"}, {"path": "test/forward_backward_compatibility/check_forward_backward_compatibility.py"}, {"path": "test/test_nn.py"}, {"path": "tools/autograd/derivatives.yaml"}]}, "reviews": {"nodes": [{"author": {"login": "albanD"}, "state": "COMMENTED"}, {"author": {"login": "coolteemf"}, "state": "COMMENTED"}, {"author": {"login": "albanD"}, "state": "COMMENTED"}, {"author": {"login": "coolteemf"}, "state": "COMMENTED"}, {"author": {"login": "albanD"}, "state": "COMMENTED"}, {"author": {"login": "coolteemf"}, "state": "COMMENTED"}, {"author": {"login": "coolteemf"}, "state": "COMMENTED"}, {"author": {"login": "albanD"}, "state": "COMMENTED"}, {"author": {"login": "coolteemf"}, "state": "COMMENTED"}, {"author": {"login": "albanD"}, "state": "COMMENTED"}, {"author": {"login": "albanD"}, "state": "COMMENTED"}, {"author": {"login": "coolteemf"}, "state": "COMMENTED"}, {"author": {"login": "albanD"}, "state": "COMMENTED"}, {"author": {"login": "coolteemf"}, "state": "COMMENTED"}, {"author": {"login": "albanD"}, "state": "COMMENTED"}, {"author": {"login": "albanD"}, "state": "APPROVED"}, {"author": {"login": "albanD"}, "state": "APPROVED"}], "totalCount": 17}, "comments": {"nodes": [{"bodyText": "Hey @coolteemf.\nYou've committed this PR, but it does not have both a 'release notes: ...' and 'topics: ...' label. Please add one of each to the PR. The 'release notes: ...' label should represent the part of PyTorch that this PR changes (fx, autograd, distributed, etc) and the 'topics: ...' label should represent the kind of PR it is (not user facing, new feature, bug fix, perf improvement, etc). The list of valid labels can be found here for the 'release notes: ...' and here for the 'topics: ...'.\nFor changes that are 'topic: not user facing' there is no need for a release notes label.", "author": {"login": "github-actions"}, "authorAssociation": "NONE", "editor": null}]}}}}}}
